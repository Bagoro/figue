#summary figue is a javascript package to cluster data and visualize clusters.

= Introduction =

figue is a javascript module to cluster data and visualize clusters.
The current version only proposes hierarchical clustering with the most common linkage techniques: single-linkage, complete-linkage and average linkage. Tree can be visualized by means of dendograms such as this one:
{{{
                                               |               
                                  ___________________________  
                                  |                         |  
                    _____________________________           |  
                    |                           |           |  
        _________________________               |           |  
        |                       |               |           |  
 ______________            ___________          |           |  
 |            |            |         |          |           |  
anna       stephany       tom       marc       john       karin
}}}

For more information about hierarchical clustering please refer to [http://en.wikipedia.org/wiki/Cluster_analysis#Hierarchical_clustering Wikipedia].

Here is an [http://web.science.mq.edu.au/~jydelort/figue/demo.html interactive demo] of figue. 

= Example =


{{{
<html>
<head>

<script type="text/javascript" src="figue.js"></script>

<script type="text/javascript">

function load() {

  // Data source: LinkedIn
  // Initial data are businesses that need to be clustered according to their size (nb of employees) and revenue (in mln$)

  var data = [ 
      {'company': 'Microsoft' , 'size': 91259, 'revenue': 60420},
      {'company': 'IBM' , 'size': 400000, 'revenue': 98787},
      {'company': 'Skype' , 'size': 700, 'revenue': 716},
      {'company': 'SAP' , 'size': 48000, 'revenue': 11567},
      {'company': 'Yahoo!' , 'size': 14000 , 'revenue': 6426 },
      {'company': 'eBay' , 'size': 15000, 'revenue': 8700},
   ] ;

  // Create the labels and the vectors describing the data

  var labels = new Array ;
  var vectors = new Array ;
  for (var i = 0 ; i < data.length ; i++) {
      labels[i] = data[i]['company'] ;
      vectors[i] = [ data[i]['size'] , data[i]['revenue']] ;
  }

  // Generate a hierarchical tree, returns the root of the tree
  // each node contains:
  //  - the centroid value, 
  //  - the subtree depth and
  //  - the cluster size

  var root = figue.agglomerate(labels, vectors , figue.EUCLIDIAN_DISTANCE,figue.SIMPLE_LINKAGE) ;

  // Produce the dendogram
  // Currently the dendogram can be customized to:
  //  - display data labels
  //  - display cluster centroids
  //  - be balanced (i.e. all leaves at the same level)
  //  - control the minimum spacing between nodes

  var dendogram = root.buildDendogram (5, true, true, true) ;

  // Render the dendogram in the page
  document.getElementById('mypre').innerHTML = dendogram
}

</script>

<body onload="load();">

<pre id="mypre"></pre>

</body>
</html>

}}}

This page will print:
{{{
                                                           |                                    
                                                   94826.5,31102.67                             
                             _____________________________________________________________      
                             |                                                           |      
                      33791.8,17565.8                                                    |      
     ________________________________________________                                    |      
     |                                              |                                    |      
     |                                        19425,6852.25                              |      
     |                           _______________________________________                 |      
     |                           |                                     |                 |      
     |                     9900,5280.67                                |                 |      
     |               _________________________                         |                 |      
     |               |                       |                         |                 |      
     |               |                  14500,7563                     |                 |      
     |               |              __________________                 |                 |      
     |               |              |                |                 |                 |      
91259,60420       700,716       14000,6426       15000,8700       48000,11567       400000,98787
 Microsoft         Skype          Yahoo             eBay              SAP               IBM     

}}}

==TODO==
  * In demo.html add function to randomly generate DS of any size
  * Run and report results of a scalability analysis
  * Add kmeans